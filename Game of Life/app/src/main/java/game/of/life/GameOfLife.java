/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package game.of.life;

public class GameOfLife {
    private boolean[][] grid;
    private int rows = 0;
    private int columns = 0;

    public GameOfLife(int rows, int columns) {
        grid = new boolean[rows][columns];
        this.rows = rows;
        this.columns = columns;
        this._initializeGrid();
    }

    private void _initializeGrid() {
        for(int row = 0; row < rows; row ++) {
            for ( int column = 0; column < columns; column ++) {
                grid[row][column] = false;
            }
        }
    }

    public int[] getGridSize() {
        return new int[]{rows, columns};
    }
    
    public boolean isAlived(int row, int column) throws OutOfRangeException {
        if (!_isInRange(row, column)) throw new OutOfRangeException();
        return grid[row][column];
    }
    
    private boolean _isInRange(int row, int column) {
        return row >= 0 && column >= 0 && row < rows && column < columns;
    }

    public void setLivingCell(int row, int column) throws OutOfRangeException {
        if (!_isInRange(row, column)) throw new OutOfRangeException();
        this.grid[row][column] = true;
    }
    
    public int countLivingNeighbours(int row, int column) throws OutOfRangeException {
        int alivedNeighbours = 0;
        if (!_isInRange(row, column)) throw new OutOfRangeException();
        
        for (int parsingRow = row - 1; parsingRow <= row + 1; parsingRow ++) {
            for (int parsingColumn = column - 1; parsingColumn <= column + 1; parsingColumn ++) {
                // Si outOfRange on ignore
                if(!_isInRange(parsingRow, parsingColumn)) continue;

                // Si c'est la case, on l'ignore
                if ((row == parsingRow) && (column == parsingColumn)) continue;

                // Sinon on incremente
                if (isAlived(parsingRow, parsingColumn)) alivedNeighbours++;
            }
        }
        return alivedNeighbours;
    }

    public void nextGeneration() {
        // TODO Auto-generated method stub
        throw new UnsupportedOperationException("Unimplemented method 'nextGeneration'");
    }

}
